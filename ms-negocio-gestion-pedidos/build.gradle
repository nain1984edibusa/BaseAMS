plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.diffplug.eclipse.apt' version '3.37.2'
}

group = 'pe.edu.galaxy.training.java.sb.ms'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    springinstrument
}


ext {
  set('springCloudVersion', "2022.0.1")
  set('mapstructVersion', "1.5.3.Final")
  set('lombokMapstructBindingVersion', "0.2.0")
  set('lombokVersion', "1.18.24")
}

compileJava {
  options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// Config Client
	
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	
	// Health check
	
	 implementation 'org.springframework.boot:spring-boot-starter-actuator'
	 
	// Eureka Discovery Client
	
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client' 
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// Oracle
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
	
	// Admin
	// implementation 'de.codecentric:spring-boot-admin-starter-client'
	
	
	// Mapstruct
	
	compileOnly("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}")

	implementation("org.mapstruct:mapstruct:${mapstructVersion}")
	annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
  
	// Testing
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	

}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
  
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

tasks.named('test') {
	useJUnitPlatform()
}
